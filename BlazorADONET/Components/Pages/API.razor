@page "/API"
@using Domain_Models
@using System.Net.Http
<h3>API</h3>
@inject HttpClient Http

<div class="container">
    @if (Persons != null)
    {
        foreach (var person in Persons)
        {
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@person.FirstName @person.LastName</h5>
                    <p class="card-text">ID: @person.PersonID</p>
                    <button class="btn btn-danger" @onclick="() => DeletePerson(person.PersonID)">Delete</button>
                    <button class="btn btn-warning" @onclick="() => UpdatePerson(person)">Edit</button>
                </div>
            </div>
        }
    }
    else
    {
        <p>No persons found.</p>
    }
</div>

@code {
    public List<Person> Persons { get; set; }
    public Person NewPerson { get; set; } = new Person();

    protected override async Task OnInitializedAsync()
    {
        Persons = await Http.GetFromJsonAsync<List<Person>>("https://localhost:7164/Person");
    }
    // Existing CreatePerson method


    // Method for updating a Person
    public async Task UpdatePerson(Person person)
    {
        var response = await Http.PutAsJsonAsync($"https://localhost:7164/Person/{person.PersonID}", person);
        if (response.IsSuccessStatusCode)
        {
            var index = Persons.FindIndex(p => p.PersonID == person.PersonID);
            if (index >= 0)
            {
                Persons[index] = person;
            }
        }
    }

    // Method for deleting a Person
    public async Task DeletePerson(int id)
    {
        var response = await Http.DeleteAsync($"https://localhost:7164/Person/{id}");
        if (response.IsSuccessStatusCode)
        {
            var person = Persons.SingleOrDefault(p => p.PersonID == id);
            if (person != null)
            {
                Persons.Remove(person);
            }
        }
    }
}


<style>
    .container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));
        gap: 20px;
    }

    .card {
        width: 100%;
        border: 1px solid black;
        border-radius: 7px;
    }

    .card-title {
        color: rebeccapurple;
    }

    .card-text {
        color: #757575; /* Lightest grey with 4.5:1 contrast over white */
        line-height: 1.5; /* Space between lines of the paragraph */
    }
</style>